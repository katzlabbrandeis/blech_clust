# GitHub Actions workflow for automated testing
# See: https://docs.github.com/en/actions
#
# This workflow runs Python tests on a self-hosted runner
# Jobs are independent to allow partial success/failure reporting

name: Python test
run-name: python_test
on:
  pull_request:
  workflow_dispatch:
jobs:
  Preamble:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - run: pwd
      - run: which python
      - run: conda info --envs
      - name: Set up repo
        uses: actions/checkout@v4
      - run: git status
      - run: echo "${{ github.ref }} | ${{ github.repository }} | ${{ github.event.pull_request.title }}"
      - name: check labels
        run: echo "${{ github.event.pull_request.labels.*.name }}"
      - name: Copy files to working-directory
        run: cp -r ./* /home/exouser/Desktop/blech_clust
      - name: Check files in working-directory
        run: ls -R /home/exouser/Desktop/blech_clust
      - name: Setup params
        run: cp /home/exouser/Desktop/blech_clust/params/_templates/* /home/exouser/Desktop/blech_clust/params
      - name: Check params
        run: for f in $(find /home/exouser/Desktop/blech_clust/params/ -type f); do echo $f; cat $f; done
  Install:
    runs-on: self-hosted
    needs: Preamble
    if: ${{ contains(github.event.pull_request.labels.*.name, 'install') }}
    # Only run installation when PR has 'install' label
    steps:
      - name: Clean install
        working-directory: /home/exouser/Desktop/blech_clust
        run: |
          echo "Running installation for tag ${{ github.ref }}"
          make clean
      - name: Install all dependencies
        working-directory: /home/exouser/Desktop/blech_clust
        run: |
          make base
          make emg
          make neurec
          make blechrnn
          make prefect
          make patch
  Test-Suite-Install:
    runs-on: self-hosted
    needs: Install
    if: ${{ contains(github.event.pull_request.labels.*.name, 'install') }}
    strategy:
      fail-fast: false
      matrix:
        test-type: [spike, emg, spike-emg]
        include:
          - test-type: spike
            command: -s
            display-name: "SPIKE only"
          - test-type: emg
            command: -e
            display-name: "EMG only"
          - test-type: spike-emg
            command: --spike-emg
            display-name: "SPIKE then EMG"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.test-type }}
      cancel-in-progress: true
    steps:
      - name: Prefect ${{ matrix.display-name }} test
        shell: bash
        working-directory: /home/exouser/Desktop/blech_clust
        run: conda run -n blech_clust python pipeline_testing/prefect_pipeline.py ${{ matrix.command }} 2>&1 |
          tee ~/Desktop/blech_clust/github.log;
          if grep -q "ERROR" ~/Desktop/blech_clust/github.log;
                            then echo "ERROR detected by bash"; exit 1; fi
  Test-Suite:
    runs-on: self-hosted
    needs: Preamble
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'install') }}
    strategy:
      fail-fast: false
      matrix:
        test-type: [spike, emg, spike-emg]
        include:
          - test-type: spike
            command: -s
            display-name: "SPIKE only"
          - test-type: emg
            command: -e
            display-name: "EMG only"
          - test-type: spike-emg
            command: --spike-emg
            display-name: "SPIKE then EMG"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.test-type }}
      cancel-in-progress: true
    steps:
      - name: Prefect ${{ matrix.display-name }} test
        shell: bash
        working-directory: /home/exouser/Desktop/blech_clust
        run: conda run -n blech_clust python pipeline_testing/prefect_pipeline.py ${{ matrix.command }} 2>&1 |
          tee ~/Desktop/blech_clust/github.log;
          if grep -q "ERROR" ~/Desktop/blech_clust/github.log;
                            then echo "ERROR detected by bash"; exit 1; fi
