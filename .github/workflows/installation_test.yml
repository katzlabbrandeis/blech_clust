# GitHub Actions workflow for testing installation on multiple platforms
# This workflow tests installation on different Linux distributions and Python versions
# Only runs when PR has 'install' label

name: Installation Test
run-name: installation_test
on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]
  workflow_dispatch:

jobs:
  check-label:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Check for install label
        id: check
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'install') }}" == "true" ]]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi

  installation-test:
    needs: check-label
    if: needs.check-label.outputs.should-run == 'true'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Clean workspace
        run: |
          echo "Cleaning workspace to ensure fresh checkout"
          rm -rf ${{ github.workspace }}/*
          rm -rf ${{ github.workspace }}/.git
          rm -rf ${{ github.workspace }}/.github

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-version: latest
          use-mamba: true

      - name: Display system information
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Python: ${{ matrix.python-version }}"
          python --version
          which python
          conda --version
          uname -a

      - name: Setup params
        run: |
          echo "Setting up blech_clust parameters"
          make params

      - name: Clean install
        run: |
          echo "Running installation for Python ${{ matrix.python-version }} on ${{ matrix.os }}"
          make clean || true

      - name: Install base dependencies
        run: |
          make make_env base

      - name: Install EMG dependencies
        run: |
          make emg

      - name: Install neuRecommend
        run: |
          mkdir ~/Desktop
          make neurec

      - name: Install Prefect
        run: |
          make prefect

      - name: Install dev requirements
        run: |
          make dev

      - name: Install optional dependencies
        run: |
          make optional

      - name: Verify installation
        run: |
          conda run -n blech_clust python -c "import numpy; print('NumPy version:', numpy.__version__)"
          conda run -n blech_clust python -c "import scipy; print('SciPy version:', scipy.__version__)"
          conda run -n blech_clust python -c "import matplotlib; print('Matplotlib version:', matplotlib.__version__)"
          conda run -n blech_clust python -c "import sklearn; print('Scikit-learn version:', sklearn.__version__)"
          conda run -n blech_clust python -c "import blech_clust; print('blech_clust package installed successfully')"

      - name: Test basic functionality
        run: |
          echo "Placeholder for basic functionality tests"

      - name: Clean up
        if: always()
        run: |
          make clean || true
